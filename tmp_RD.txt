<template>
  <div class="container" v-if="data">
    <el-breadcrumb separator="/">
      <el-breadcrumb-item @click="$router.push('/resources')" style="cursor:pointer">鏂囦欢闆?/el-breadcrumb-item>
      <el-breadcrumb-item>{{ data.title }}</el-breadcrumb-item>
    </el-breadcrumb>

    <el-card class="header" shadow="never">
      <h2 class="title">{{ data.title }}</h2>
      <p class="desc" v-if="data.description">{{ data.description }}</p>

      <div class="share">
        <el-input v-model="data.shareUrl" readonly style="max-width: 520px" />
        <el-button @click="copy(data.shareUrl)">澶嶅埗閾炬帴</el-button>
      </div>
    </el-card>

    <el-row :gutter="16">
      <el-col :xs="24" :md="16">
        <el-card shadow="hover">
          <template #header>浣跨敤鏂规硶</template>
          <div class="usage" v-if="data.usage">{{ data.usage }}</div>
          <template v-else>
            <el-empty description="鏆傛棤浣跨敤璇存槑" />
          </template>
          <template #footer>
            <small>鍒涘缓鏃堕棿锛歿{ data.created_at }}</small>
          </template>
        </el-card>
      </el-col>

      <el-col :xs="24" :md="8">
        <el-card shadow="hover">
          <template #header>鏂囦欢</template>
          <el-empty v-if="!data.files?.length" description="鏆傛棤鏂囦欢" />
          <el-space v-else direction="vertical" alignment="stretch" style="width:100%">
            <el-card v-for="f in data.files" :key="f.id" shadow="never" class="file">
              <div class="file-row">
                <div class="name" :title="f.original_name">{{ f.original_name }}</div>
                <el-button size="small" type="primary" @click="download(f.id)">涓嬭浇</el-button>
              </div>
              <div class="meta">{{ prettySize(f.size) }} 路 {{ f.mime || 'unknown' }}</div>
            </el-card>
          </el-space>
        </el-card>
      </el-col>
    </el-row>

    <el-alert type="info" show-icon title="鏈櫥褰曚篃鑳戒笅杞? description="鍒嗕韩缁欎换浣曚汉锛屽鏂规墦寮€姝ら〉鍗冲彲鑷敱涓嬭浇銆? class="mt-16" />
  </div>

  <el-skeleton v-else animated :rows="6" class="container" />
</template>

<script setup lang="ts">
import { onMounted, ref } from 'vue'
import { getResource } from '../api/resources'
import { useRoute } from 'vue-router'
import { ElMessage } from 'element-plus'

const route = useRoute()
const data = ref<any>(null)

function prettySize(n: number) {
  if (!n && n !== 0) return ''
  const units = ['B','KB','MB','GB']
  let i = 0; let v = n
  while (v >= 1024 && i < units.length - 1) { v /= 1024; i++ }
  return `${v.toFixed(1)} ${units[i]}`
}

async function fetch() {
  data.value = await getResource(route.params.slug as string)
}
function copy(text: string) {
  navigator.clipboard.writeText(text).then(() => ElMessage.success('閾炬帴宸插鍒?))
}
function download(fileId: number) {
  // 鐩存帴鎵撳紑鍚庣鍏紑涓嬭浇鎺ュ彛
  window.open(`/api/files/${fileId}/download`, '_blank')
}
onMounted(fetch)
</script>

<style scoped>
.container { max-width: 1160px; margin: 0 auto; padding: 16px; }
.header { margin: 10px 0 16px; border-radius: 14px; }
.title { margin: 0 0 6px; font-size: 22px; font-weight: 800; }
.desc { color: var(--el-text-color-secondary); }
.share { display: flex; gap: 8px; align-items: center; margin-top: 10px; }
.file { border-radius: 12px; }
.file-row { display: flex; align-items: center; justify-content: space-between; gap: 8px; }
.name { overflow: hidden; text-overflow: ellipsis; white-space: nowrap; max-width: 70%; }
.meta { color: var(--el-text-color-secondary); font-size: 12px; margin-top: 4px; }
.mt-16 { margin-top: 16px; }
</style>
